{"remainingRequest":"C:\\Users\\lienh\\p7_groupomania\\Projet7_OC_Groupomania\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lienh\\p7_groupomania\\Projet7_OC_Groupomania\\frontend\\src\\components\\Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lienh\\p7_groupomania\\Projet7_OC_Groupomania\\frontend\\src\\components\\Post.vue","mtime":1611786499623},{"path":"C:\\Users\\lienh\\p7_groupomania\\Projet7_OC_Groupomania\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611786468064},{"path":"C:\\Users\\lienh\\p7_groupomania\\Projet7_OC_Groupomania\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1611786467245},{"path":"C:\\Users\\lienh\\p7_groupomania\\Projet7_OC_Groupomania\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1611786468064},{"path":"C:\\Users\\lienh\\p7_groupomania\\Projet7_OC_Groupomania\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1611786496812}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgUG9zdERhdGFTZXJ2aWNlIGZyb20gIi4uL3NlcnZpY2VzL1Bvc3REYXRhU2VydmljZSI7DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJwb3N0IiwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY3VycmVudFBvc3Q6IG51bGwsDQogICAgICBtZXNzYWdlOiAnJw0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBnZXRQb3N0KGlkKSB7DQogICAgICBQb3N0RGF0YVNlcnZpY2UuZ2V0KGlkKQ0KICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgdGhpcy5jdXJyZW50UG9zdCA9IHJlc3BvbnNlLmRhdGE7DQogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaChlID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhlKTsNCiAgICAgICAgfSk7DQogICAgfSwNCiAgICB1cGRhdGVQdWJsaXNoZWQoc3RhdHVzKSB7DQogICAgICB2YXIgZGF0YSA9IHsNCiAgICAgICAgaWQ6IHRoaXMuY3VycmVudFBvc3QuaWQsDQogICAgICAgIHRpdGxlOiB0aGlzLmN1cnJlbnRQb3N0LnRpdGxlLA0KICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5jdXJyZW50UG9zdC5kZXNjcmlwdGlvbiwNCiAgICAgICAgcHVibGlzaGVkOiBzdGF0dXMNCiAgICAgIH07DQogICAgICBQb3N0RGF0YVNlcnZpY2UudXBkYXRlKHRoaXMuY3VycmVudFBvc3QuaWQsIGRhdGEpDQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICB0aGlzLmN1cnJlbnRQb3N0LnB1Ymxpc2hlZCA9IHN0YXR1czsNCiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsNCiAgICAgICAgfSkNCiAgICAgICAgLmNhdGNoKGUgPT4gew0KICAgICAgICAgIGNvbnNvbGUubG9nKGUpOw0KICAgICAgICB9KTsNCiAgICB9LA0KICAgIHVwZGF0ZVBvc3QoKSB7DQogICAgICBQb3N0RGF0YVNlcnZpY2UudXBkYXRlKHRoaXMuY3VycmVudFBvc3QuaWQsIHRoaXMuY3VycmVudFBvc3QpDQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsNCiAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSAnVGhlIHBvc3Qgd2FzIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5ISc7DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaChlID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhlKTsNCiAgICAgICAgfSk7DQogICAgfSwNCiAgICBkZWxldGVQb3N0KCkgew0KICAgICAgUG9zdERhdGFTZXJ2aWNlLmRlbGV0ZSh0aGlzLmN1cnJlbnRQb3N0LmlkKQ0KICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7DQogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBuYW1lOiAicG9zdHMiIH0pOw0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goZSA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2coZSk7DQogICAgICAgIH0pOw0KICAgIH0NCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLm1lc3NhZ2UgPSAnJzsNCiAgICB0aGlzLmdldFBvc3QodGhpcy4kcm91dGUucGFyYW1zLmlkKTsNCiAgfQ0KfTsNCg=="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div v-if=\"currentPost\" class=\"edit-form\">\r\n    <h4>Post</h4>\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label for=\"title\">Title</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"title\"\r\n          v-model=\"currentPost.title\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"description\">Description</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"description\"\r\n          v-model=\"currentPost.description\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label><strong>Status:</strong></label>\r\n        {{ currentPost.published ? \"Published\" : \"Pending\" }}\r\n      </div>\r\n    </form>\r\n\r\n    <button class=\"badge badge-primary mr-2\"\r\n      v-if=\"currentPost.published\"\r\n      @click=\"updatePublished(false)\"\r\n    >\r\n      UnPublish\r\n    </button>\r\n    <button v-else class=\"badge badge-primary mr-2\"\r\n      @click=\"updatePublished(true)\"\r\n    >\r\n      Publish\r\n    </button>\r\n\r\n    <button class=\"badge badge-danger mr-2\"\r\n      @click=\"deletePost\"\r\n    >\r\n      Delete\r\n    </button>\r\n\r\n    <button type=\"submit\" class=\"badge badge-success\"\r\n      @click=\"updatePost\"\r\n    >\r\n      Update\r\n    </button>\r\n    <p>{{ message }}</p>\r\n  </div>\r\n\r\n  <div v-else>\r\n    <br />\r\n    <p>Please click on a Post...</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PostDataService from \"../services/PostDataService\";\r\nexport default {\r\n  name: \"post\",\r\n  data() {\r\n    return {\r\n      currentPost: null,\r\n      message: ''\r\n    };\r\n  },\r\n  methods: {\r\n    getPost(id) {\r\n      PostDataService.get(id)\r\n        .then(response => {\r\n          this.currentPost = response.data;\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    updatePublished(status) {\r\n      var data = {\r\n        id: this.currentPost.id,\r\n        title: this.currentPost.title,\r\n        description: this.currentPost.description,\r\n        published: status\r\n      };\r\n      PostDataService.update(this.currentPost.id, data)\r\n        .then(response => {\r\n          this.currentPost.published = status;\r\n          console.log(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    updatePost() {\r\n      PostDataService.update(this.currentPost.id, this.currentPost)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.message = 'The post was updated successfully!';\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    },\r\n    deletePost() {\r\n      PostDataService.delete(this.currentPost.id)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.$router.push({ name: \"posts\" });\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.message = '';\r\n    this.getPost(this.$route.params.id);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.edit-form {\r\n  max-width: 300px;\r\n  margin: auto;\r\n}\r\n</style>"]}]}